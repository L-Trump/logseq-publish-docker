name: Build-Docker

on:
  push:
    # Publish semver tags as releases.
    tags: ["*"]
  workflow_dispatch:

env:
  IMAGE_REPO_NAME: ghcr.io/l-trump/logseq-publish-spa

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker Login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set tags
        id: set-tags
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            echo "::set-output name=tags::${{ env.IMAGE_REPO_NAME }}:${{ github.ref_name }} ${{ env.IMAGE_REPO_NAME }}:latest"
            echo "::set-output name=alpine_tags::username/repository:${{ github.ref_name }}-alpine ${{ env.IMAGE_REPO_NAME }}:alpine"
          else
            echo "::set-output name=tags::${{ env.IMAGE_REPO_NAME }}:latest"
            echo "::set-output name=alpine_tags::${{ env.IMAGE_REPO_NAME }}:alpine"
          fi

      - name: Build and push debian-based image
        id: docker-build-main
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          file: Dockerfile
          tags: ${{ steps.set-tags.outputs.tags }}

      - name: Build and push alpine-base image
        id: docker-build-alpine
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          file: Dockerfile.alpine
          tags: ${{ steps.set-tags.outputs.alpine_tags }}

      - name: Print image digests
        run: |
          echo "Main image digest: ${{ steps.docker-build-main.outputs.digest }}"  
          echo "Alpine image digest: ${{ steps.docker-build-alpine.outputs.digest }}"
